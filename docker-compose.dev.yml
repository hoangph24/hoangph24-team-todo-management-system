version: '3.8'

services:
  # Database
  db:
    image: postgres:15-alpine
    container_name: todo_db_dev
    environment:
      POSTGRES_DB: todo_app
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    volumes:
      - postgres_data_dev:/var/lib/postgresql/data
      - ./BE/database/init.sql:/docker-entrypoint-initdb.d/init.sql
    ports:
      - "5432:5432"
    networks:
      - todo_network_dev
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Backend API (Development)
  backend:
    build:
      context: ./BE
      dockerfile: Dockerfile.dev
    container_name: todo_backend_dev
    environment:
      NODE_ENV: development
      DB_HOST: db
      DB_PORT: 5432
      DB_USERNAME: postgres
      DB_PASSWORD: postgres
      DB_NAME: todo_app
      JWT_SECRET: your-super-secret-jwt-key-change-in-production
      JWT_EXPIRES_IN: 24h
      PORT: 3000
    ports:
      - "3000:3000"
    volumes:
      - ./BE:/app
      - /app/node_modules
    depends_on:
      db:
        condition: service_healthy
    networks:
      - todo_network_dev
    command: sh -c "npm run seed && npm run start:dev"

  # Frontend (Development)
  frontend:
    build:
      context: ./FE
      dockerfile: Dockerfile.dev
    container_name: todo_frontend_dev
    environment:
      - VITE_API_URL=http://localhost:3000
    ports:
      - "3001:3001"
    volumes:
      - ./FE:/app
      - /app/node_modules
    depends_on:
      - backend
    networks:
      - todo_network_dev
    command: npm run dev -- --host 0.0.0.0 --port 3001

volumes:
  postgres_data_dev:

networks:
  todo_network_dev:
    driver: bridge 